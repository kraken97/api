@using System;
@model IEnumerable<Task2.Models.RelatedPages>

@{
    ViewData["Title"] = "Index";
}

<h2>Index</h2>

<p>
    <a asp-action="Create">Create New</a>
</p>

<table class="table table-bordered table-condensed table-striped">
    <thead>
        <tr>
            <th>
                @{
                    var id=@Html.DisplayNameFor(model => model.ID);
                    var page1=  @Html.DisplayNameFor(model => model.Page1);
                    var  page2 =@Html.DisplayNameFor(model => model.Page2);
        
                }
                <a  href="/RelatedPages/Index?order=@(ViewBag.Order)&prop=@id">@id</a>
            </th>
            <th>
                <a  href="/RelatedPages/Index?order=@(ViewBag.Order)&prop=@page1">@page1</a>
                </th>
                <th> @Html.DisplayNameFor(model => model.Page1.UrlName)</th>
        
            <th>
                <a  href="/RelatedPages/Index?order=@(ViewBag.Order)&prop=@page2">@page2</a>
            </th>
            <th> @Html.DisplayNameFor(model => model.Page2.UrlName)</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @item.ID
            </td>
            <td>
                @item.Page1Id 
            </td>
         
      
            <td>
                  @item.Page2Id
            </td>
         
          
            <td>
                <a asp-action="Delete" asp-route-id="@item.ID">Delete</a>
            </td>
        </tr>
}

  
    </tbody>
</table>
@{
    var take=(int)ViewBag.Take;

}
<ul class="pagination">
           @for(int i =0;i<Math.Ceiling((double)ViewBag.Count/@take);i++){
            <li><a  href="/RelatedPages/Index?take=@take&skip=@(i*@take)@ViewBag.orderreq@ViewBag.propreq">@(i+1)</a></li>
        }

      </ul>
